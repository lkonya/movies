plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "org.jetbrains.kotlin.kapt" version "1.3.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.21"
}

version "0.1"
group "movies"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:1.1.0"
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"

    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut.aws:micronaut-function-aws-api-proxy"

    compile "io.symphonia:lambda-logging:${lambdaLoggerVersion}"
    compile "io.github.microutils:kotlin-logging:${kotlinLogger}"

    compile "software.amazon.awssdk:dynamodb:${awsDynamodbVersion}"
    compile "software.amazon.awssdk:core:${awsCoreVersion}"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:${jackosKotlinModuleVersion}"

    developmentOnly "io.micronaut:micronaut-http-server-netty"

    kaptTest "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.jetbrains.spek:spek-api:${spekVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:${spekVersion}"
}

//Not exists, but gradle requires it
mainClassName = "movies.Application"
run.classpath += configurations.developmentOnly
test.classpath += configurations.developmentOnly
run.jvmArgs("-noverify", "-XX:TieredStopAtLevel=1", "-Dcom.sun.management.jmxremote")

shadowJar {
    mergeServiceFiles()
}

task buildZip(type: Zip) {
    from sourceSets.main.output
    into("lib") {
        from configurations.compileClasspath
        from configurations.runtimeClasspath
    }
}
shadowJar.dependsOn buildZip

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = "1.8" 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = "1.8" 
	    javaParameters = true 
	}
}
