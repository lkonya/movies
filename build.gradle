plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "org.jetbrains.kotlin.kapt" version "1.3.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.21"
}

version "0.1"
group "movies.kotlin"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut.aws:micronaut-function-aws-api-proxy"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "com.amazonaws:aws-lambda-java-events:2.2.6"
    compile "software.amazon.awssdk:dynamodb:2.5.25"
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "org.apache.logging.log4j:log4j-core:2.8.2"
    runtime "org.apache.logging.log4j:log4j-api:2.8.2"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.8.2"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.1.0"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.jetbrains.spek:spek-api:1.1.5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"
}

test.classpath += configurations.developmentOnly

mainClassName = "movies.kotlin.Application"

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
task buildZip(type: Zip) {
    from compileKotlin
    from processResources
    into("lib") {
        from configurations.compileClasspath
    }
}

build.dependsOn buildZip

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}
